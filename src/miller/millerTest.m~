function [ output_args ] = millerTest(features,netL,netR,u,v,P,T)

PCs=size(P,1);

for i=
    for j=
        testingData=features(:,:,i,j);
        N=size(testingData,1);
        reducedWindow=zeros(N,PCs);

        for k=T+1:N-T
            slidingWindow=testingData(k+[-T:T],:);
            reducedWindow(k,:)=P*((slidingWindow(:)-u')./v');
        end
        
        %Testing:
        y = netL(reducedWindow');

        y1 = netR(reducedWindow');

        figure 
        hold on
        plot(stanceL(:,1,1))
        plot(y)
        plot(stanceR(:,1,1))
        plot(y1)
        legend('Actual','Predicted')
        hold off

        %Compute events from stance
        [LHS,RHS,LTO,RTO] =getEventsFromStance(y'>.5,y1'>.5);
    end
end


end

